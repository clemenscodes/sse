"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[905],{3118:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>d,toc:()=>a});var t=s(4512),i=s(3250);const r={slug:"/description/setup",sidebar_position:4},o="Projektaufbau",d={unversionedId:"description/setup",id:"description/setup",title:"Projektaufbau",description:"Das Repository ist ein Nx Monorepo.",source:"@site/src/description/setup.mdx",sourceDirName:"description",slug:"/description/setup",permalink:"/sse/en/description/setup",draft:!1,unlisted:!1,editUrl:"https://github.com/clemenscodes/sse/edit/main/apps/notes/docs/src/description/setup.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{slug:"/description/setup",sidebar_position:4},sidebar:"defaultSidebar",previous:{title:"Verwendete Technologien",permalink:"/sse/en/description/techstack"},next:{title:"Infrastruktur",permalink:"/sse/en/infrastructure"}},c={},a=[];function u(e){const n=Object.assign({h1:"h1",p:"p",code:"code",a:"a"},(0,i.ah)(),e.components);return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"projektaufbau",children:"Projektaufbau"}),"\n",(0,t.jsxs)(n.p,{children:["Das Repository ist ein ",(0,t.jsx)(n.code,{children:"Nx"})," Monorepo.\nDort sind alle Aufgaben und Ressourcen des gesamten Moduls zu finden und k\xf6nnen \xfcber die Nx-CLI verwaltet werden."]}),"\n",(0,t.jsxs)(n.p,{children:["Projekte befinden sich im Ordner ",(0,t.jsx)(n.code,{children:"apps"}),".\nDas Abschlussprojekt befindet sich im Ordner ",(0,t.jsx)(n.code,{children:"apps/notes"}),".\nNx erm\xf6glicht das einfache Importieren und Konsumieren von Bibliotheken in den Projekten durch global registrierte Importpfade in der ",(0,t.jsx)(n.code,{children:"tsconfig.base.json"}),".\nDie internen Bibliotheken befinden sich im Ordner ",(0,t.jsx)(n.code,{children:"libs"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Jedes Projekt wird durch Metadaten beschrieben, welche Nx mitteilen, welcher Code zu der Bibliothek oder Anwendung geh\xf6rt.\nDiese Metadaten werden in der ",(0,t.jsx)(n.code,{children:"project.json"})," angegeben. Es wird au\xdferdem angegeben welche Projekte voneinander abh\xe4ngen,\ndamit rekursive Abh\xe4ngigkeiten erkannt und verhindert werden k\xf6nnen und Treeshaking vorgenommen kann."]}),"\n",(0,t.jsxs)(n.p,{children:["Die einzelnen Projekte haben f\xfcr die Entwicklungsvariante und Produktionsvariante jeweils einen ",(0,t.jsx)(n.code,{children:"Dockerfile"}),"."]}),"\n",(0,t.jsxs)(n.p,{children:["Das Abschlussprojekt l\xe4sst sich mit ",(0,t.jsx)(n.code,{children:"Docker Compose"})," starten."]}),"\n",(0,t.jsxs)(n.p,{children:["Weitere Informationen zum Starten und Entwickeln des Projekts befinden sich ",(0,t.jsx)(n.a,{href:"https://github.com/clemenscodes/sse/blob/main/apps/notes/README.md",children:"hier"}),"."]})]})}const l=function(e={}){const{wrapper:n}=Object.assign({},(0,i.ah)(),e.components);return n?(0,t.jsx)(n,Object.assign({},e,{children:(0,t.jsx)(u,e)})):u(e)}},3250:(e,n,s)=>{s.d(n,{Zo:()=>d,ah:()=>r});var t=s(2735);const i=t.createContext({});function r(e){const n=t.useContext(i);return t.useMemo((()=>"function"==typeof e?e(n):{...n,...e}),[n,e])}const o={};function d({components:e,children:n,disableParentContext:s}){let d;return d=s?"function"==typeof e?e({}):e||o:r(e),t.createElement(i.Provider,{value:d},n)}}}]);