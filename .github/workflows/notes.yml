name: Notes

on:
    push:
        branches: [main]
    pull_request:
        types: [opened, synchronize]

concurrency:
    group: ${{ github.workflow }}-${{ github.event.number || github.ref }}
    cancel-in-progress: true

env:
    NEXT_TELEMETRY_DISABLED: 1
    NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT: 2
    NX_CLOUD_DISTRIBUTED_EXECUTION: true
    NX_EXEC: 'yarn nx affected --nx-bail --base=$NX_BASE --head=$NX_HEAD --output-style=stream --parallel=$NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT -t'

jobs:
    set-agents:
        runs-on: ubuntu-latest
        name: Set Agent Matrix
        outputs:
            matrix: ${{ steps.set-matrix.outputs.matrix }}
        steps:
            - name: Calculate Matrix
              id: set-matrix
              shell: bash
              run: |
                  AGENTS_JSON_ARRAY=$(node -e "console.log(JSON.stringify(Array.from(new Array($NX_CLOUD_DISTRIBUTED_EXECUTION_AGENT_COUNT)).map((_, i) => i + 1)));")
                  echo $AGENTS_JSON_ARRAY
                  echo "matrix=$AGENTS_JSON_ARRAY" >> $GITHUB_OUTPUT

    app:
        permissions:
            contents: read
            actions: read
        runs-on: ubuntu-latest
        steps:
            - name: Checkout
              uses: actions/checkout@v3
              with:
                  fetch-depth: 0

            - name: Derive SHAs
              uses: nrwl/nx-set-shas@v3

            - name: Install Node
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - name: Cache Node
              id: node_cache
              uses: actions/cache@v3
              with:
                  path: |
                      dist/**/.next/cache
                      node_modules/
                  key: ubuntu-latest-node-${{ hashFiles('yarn.lock') }}
                  restore-keys: ubuntu-latest-node-

            - name: Install Node Dependencies
              if: steps.node_cache.outputs.cache-hit != 'true'
              run: yarn install --immutable

            - name: Start Agents
              if: needs.agents.result != 'failure' &&
                  needs.agents.result != 'cancelled' &&
                  needs.agents.result != 'skipped'
              run: npx nx-cloud start-ci-run --stop-agents-after=test

            - name: Run Agents
              id: agents
              if: needs.agents.result != 'failure' &&
                  needs.agents.result != 'cancelled' &&
                  needs.agents.result != 'skipped'
              uses: jameshenry/parallel-bash-commands@v1
              with:
                  cmd1: $NX_EXEC lint
                  cmd2: $NX_EXEC build
                  cmd3: $NX_EXEC test

            - name: Stop Agents
              if: always()
              run: npx nx-cloud stop-all-agents

            - name: Abort Workflow
              if: failure()
              run: |
                  curl -X POST -H "Authorization: Bearer ${{ secrets.REPO_GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/cancel

    agents:
        name: Agent ${{ matrix.agent }}
        needs: [set-agents]
        runs-on: ubuntu-latest
        defaults:
            run:
                shell: bash
        strategy:
            matrix:
                agent:
                    - ${{fromJson(needs.set-agents.outputs.matrix)}}
        steps:
            - name: Checkout [Pull Request]
              uses: actions/checkout@v3
              if: github.event_name == 'pull_request'
              with:
                  ref: ${{ github.event.pull_request.head.sha }}
                  fetch-depth: 0

            - name: Checkout [Main]
              uses: actions/checkout@v3
              if: github.event_name != 'pull_request'
              with:
                  fetch-depth: 0

            - name: Derive SHAs
              uses: nrwl/nx-set-shas@v3

            - name: Install Node
              uses: actions/setup-node@v3
              with:
                  node-version: 16

            - name: Restore Node Cache
              id: node_cache
              uses: actions/cache/restore@v3
              with:
                  path: |
                      dist/**/.next/cache
                      node_modules/
                  key: ubuntu-latest-node-${{ hashFiles('yarn.lock') }}
                  restore-keys: ubuntu-latest-node-

            - name: Install Node Dependencies
              if: steps.node_cache.outputs.cache-hit != 'true'
              run: yarn install --immutable

            - name: Run Agent
              run: npx nx-cloud start-agent

            - name: Abort Workflow
              if: failure()
              run: |
                  curl -X POST -H "Authorization: Bearer ${{ secrets.REPO_GITHUB_TOKEN }}" https://api.github.com/repos/${{ github.repository }}/actions/runs/${{ github.run_id }}/cancel
