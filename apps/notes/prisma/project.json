{
    "name": "prisma",
    "$schema": "../../../node_modules/nx/schemas/project-schema.json",
    "sourceRoot": "apps/notes/prisma",
    "projectType": "application",
    "targets": {
        "env": {
            "executor": "nx:run-commands",
            "options": {
                "command": "[ ! -f .env ] && cp .env.skeleton .env; true",
                "cwd": "apps/notes/prisma"
            }
        },
        "generation": {
            "executor": "nx:run-commands",
            "options": {
                "command": "PRISMA_DISABLE_WARNINGS=1 yarn prisma generate --schema=apps/notes/prisma/schema.prisma"
            }
        },
        "build": {
            "dependsOn": ["generation"],
            "executor": "@nx/esbuild:esbuild",
            "outputs": ["{options.outputPath}"],
            "options": {
                "platform": "node",
                "outputPath": "dist/apps/notes/prisma",
                "format": ["cjs"],
                "bundle": true,
                "main": "apps/notes/prisma/seed.ts",
                "tsConfig": "apps/notes/prisma/tsconfig.app.json",
                "generatePackageJson": true,
                "generateLockfile": true,
                "esbuildOptions": {
                    "sourcemap": false,
                    "outExtension": {
                        ".js": ".js"
                    }
                }
            }
        },
        "reset": {
            "dependsOn": ["build", "env"],
            "executor": "nx:run-commands",
            "options": {
                "command": "PRISMA_DISABLE_WARNINGS=1 yarn prisma migrate reset --schema=apps/notes/prisma/schema.prisma --skip-generate --force"
            }
        },
        "migration": {
            "dependsOn": ["reset"],
            "executor": "nx:run-commands",
            "options": {
                "command": "PRISMA_DISABLE_WARNINGS=1 yarn prisma migrate dev --schema=apps/notes/prisma/schema.prisma --skip-generate --name $(git rev-parse --short HEAD)"
            }
        },
        "seed": {
            "dependsOn": ["migration"],
            "executor": "nx:run-commands",
            "options": {
                "command": "PRISMA_DISABLE_WARNINGS=1 yarn node dist/apps/notes/prisma/seed.js"
            }
        },
        "lint": {
            "executor": "@nx/linter:eslint",
            "outputs": ["{options.outputFile}"],
            "options": {
                "lintFilePatterns": ["apps/notes/prisma/**/*.ts"]
            }
        },
        "status": {
            "executor": "nx:run-commands",
            "options": {
                "command": "PRISMA_DISABLE_WARNINGS=1 yarn prisma migrate status --schema=apps/notes/prisma/schema.prisma"
            }
        },
        "studio": {
            "executor": "nx:run-commands",
            "options": {
                "command": "PRISMA_DISABLE_WARNINGS=1 yarn prisma studio --schema=apps/notes/prisma/schema.prisma"
            }
        },
        "start": {
            "dependsOn": ["image"],
            "command": "docker run --rm -d -p 4444:4444/tcp prisma:latest"
        },
        "image": {
            "command": "INPUT_TAGS=latest yarn nx docker prisma"
        },
        "docker": {
            "executor": "@nx-tools/nx-container:build",
            "options": {
                "engine": "docker"
            },
            "defaultConfiguration": "development",
            "configurations": {
                "development": {
                    "file": "apps/notes/prisma/docker/development/Dockerfile",
                    "load": true,
                    "metadata": {
                        "images": ["dev-prisma"]
                    }
                },
                "production": {
                    "file": "apps/notes/prisma/docker/production/Dockerfile",
                    "load": true,
                    "metadata": {
                        "images": ["prisma"]
                    }
                }
            }
        }
    }
}
